[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = lte.simulations.a_testworld_03.Highway3

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 160000s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 10000m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.moduleType = "lte.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("helloworld.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

##########################################################
#              LTE specific parameters                   #
##########################################################

# Stationary Mobility and Power Size
#A
**.eNodeB1.mobility.initialZ = 70m #eNB height
**.eNodeB1.lteNic.phy.eNodeBTxPower = 46 #dbm
**.droneB1.mobility.initialZ = 100m #eNB height
**.droneB1.lteNic.phy.eNodeBTxPower = 23
**.droneB2.mobility.initialZ = 100m #eNB height
**.droneB2.lteNic.phy.eNodeBTxPower = 23
#B
**.eNodeB2.mobility.initialZ = 70m #eNB height
**.eNodeB2.lteNic.phy.eNodeBTxPower = 46 #dbm
**.droneB3.mobility.initialZ = 100m #eNB height
**.droneB3.lteNic.phy.eNodeBTxPower = 23
**.droneB4.mobility.initialZ = 100m #eNB height
**.droneB4.lteNic.phy.eNodeBTxPower = 23
#C
**.eNodeB3.mobility.initialZ = 70m #eNB height
**.eNodeB3.lteNic.phy.eNodeBTxPower = 46 #dbm
**.droneB5.mobility.initialZ = 100m #eNB height
**.droneB5.lteNic.phy.eNodeBTxPower = 23
**.droneB6.mobility.initialZ = 100m #eNB height
**.droneB6.lteNic.phy.eNodeBTxPower = 23
#D
**.eNodeB4.mobility.initialZ = 70m #eNB height
**.eNodeB4.lteNic.phy.eNodeBTxPower = 46 #dbm

# Enable dynamic association of UEs (based on best SINR)
*.car[*].lteNic.phy.dynamicCellAssociation = true

**.car[*].masterId = 1     # useless if dynamic association is disabled
**.car[*].macCellId = 1    # useless if dynamic association is disabled
#A
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1
**.droneB1.macCellId = 2
**.droneB1.macNodeId = 2
**.droneB2.macCellId = 3
**.droneB2.macNodeId = 3
#B
**.eNodeB2.macCellId = 4
**.eNodeB2.macNodeId = 4
**.droneB3.macCellId = 5
**.droneB3.macNodeId = 5
**.droneB4.macCellId = 6
**.droneB4.macNodeId = 6
#C
**.eNodeB3.macCellId = 7
**.eNodeB3.macNodeId = 7
**.droneB5.macCellId = 8
**.droneB5.macNodeId = 8
**.droneB6.macCellId = 9
**.droneB6.macNodeId = 9
#D
**.eNodeB7.macCellId = 10
**.eNodeB7.macNodeId = 10

**.eNodeBCount = 10

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.numUe = ${numUEs=10}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 25
**.fbDelay = 1

# Enable handover
*.car[*].lteNic.phy.enableHandover = true

*.eNodeB*.lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.broadcastMessageInterval = 0.5s

*.droneB*.lteNic.phy.enableHandover = true
*.droneB*.lteNic.phy.broadcastMessageInterval = 0.5s

# X2 and SCTP configuration
#*.eNodeB*.numX2Apps = 1  # one x2App per peering eNodeB
#A
*.eNodeB1.numX2Apps = 1
*.droneB1.numX2Apps = 2
*.droneB2.numX2Apps = 2
#B
*.eNodeB2.numX2Apps = 2
*.droneB3.numX2Apps = 2
*.droneB4.numX2Apps = 2
#C
*.eNodeB3.numX2Apps = 2
*.droneB5.numX2Apps = 2
*.droneB6.numX2Apps = 2
#D
*.eNodeB4.numX2Apps = 1

*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.droneB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

#A
*.eNodeB1.x2App[0].client.connectAddress = "droneB1%x2ppp0" 
*.droneB1.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"
*.droneB1.x2App[1].client.connectAddress = "droneB2%x2ppp0" 
*.droneB2.x2App[0].client.connectAddress = "droneB1%x2ppp0" 
*.droneB2.x2App[1].client.connectAddress = "eNodeB2%x2ppp0"
#B
*.eNodeB2.x2App[0].client.connectAddress = "droneB2%x2ppp0" 
*.eNodeB2.x2App[1].client.connectAddress = "droneB3%x2ppp0"
*.droneB3.x2App[0].client.connectAddress = "eNodeB2%x2ppp0"
*.droneB3.x2App[1].client.connectAddress = "droneB4%x2ppp0"
*.droneB4.x2App[0].client.connectAddress = "droneB3%x2ppp0"
*.droneB4.x2App[1].client.connectAddress = "eNodeB3%x2ppp0"
#C
*.eNodeB3.x2App[0].client.connectAddress = "droneB4%x2ppp0" 
*.eNodeB3.x2App[1].client.connectAddress = "droneB5%x2ppp0"
*.droneB5.x2App[0].client.connectAddress = "eNodeB3%x2ppp0"
*.droneB5.x2App[1].client.connectAddress = "droneB6%x2ppp0"
*.droneB6.x2App[0].client.connectAddress = "droneB5%x2ppp0"
*.droneB6.x2App[1].client.connectAddress = "eNodeB4%x2ppp0"
#D
*.eNodeB4.x2App[0].client.connectAddress = "droneB6%x2ppp0" 


#D
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false
# ----------------------------------------------------------------------------- #
# Config "dummy-app"
#
[Config dummy]

# ----------------------------------------------------------------------------- #
# Config "multi-pare-TCP-app"
#
[Config single-pare-TCP]

##########################################################
#                    App Layer                           #
##########################################################

# Transmitter
*.server.numTcpApps = 1
*.server.tcpApp[0].typename = "TCPSessionApp"
*.server.tcpApp[0].connectPort = 1000
*.server.tcpApp[0].localPort = 1000
*.server.tcpApp[0].sendBytes = 1GiB
*.server.tcpApp[0].ctive = true
*.server.tcpApp[0].tOpen = 219.9s
*.server.tcpApp[0].tSend = 220s
*.server.tcpApp[0].connectAddress = "car[0]"
*.server.tcpApp[0].localAddress = "server[0]" 

# Receiver
*.car[0].numTcpApps = 1
*.car[0].tcpApp[0].typename = "TCPSinkApp"
*.car[0].tcpApp[0].localPort = 1000

**.tcpApp[*].tClose = -1s


# ----------------------------------------------------------------------------- #
# Config "multi-pare-TCP-app"
#
[Config multi-pare-TCP]


# Transmitter
*.server.numTcpApps = 1
*.server.tcpApp[*].typename = "TCPSessionApp"
*.server.tcpApp[*].connectPort = 1000 + ancestorIndex(0)
*.server.tcpApp[*].localPort = 1000
*.server.tcpApp[*].sendBytes = 100MiB
*.server.tcpApp[*].ctive = true
*.server.tcpApp[*].tOpen = 60s
*.server.tcpApp[*].tSend = 61s
*.server.tcpApp[*].connectAddress = "car[" + string(ancestorIndex(0)) + "]"
*.server.tcpApp[*].localAddress = "server[0]" 



# Receiver
*.car[*].numTcpApps = 1
*.car[*].tcpApp[*].typename = "TCPSinkApp"
*.car[*].tcpApp[*].localPort = 1000 + ancestorIndex(1)

**.tcpApp[*].tClose = -1s
