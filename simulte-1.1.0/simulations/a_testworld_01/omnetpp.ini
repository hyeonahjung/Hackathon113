[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = lte.simulations.a_testworld_01.Highway

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 800s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 10000m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.moduleType = "lte.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("helloworld.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

##########################################################
#              LTE specific parameters                   #
##########################################################

# Stationary Mobility and Power Size
**.eNodeB1.mobility.initialZ = 70m #eNB height
**.eNodeB2.mobility.initialZ = 70m #eNB height
**.eNodeB3.mobility.initialZ = 70m #eNB height
**.eNodeB4.mobility.initialZ = 0m #eNB height
**.eNodeB5.mobility.initialZ = 0m #eNB height
**.eNodeB6.mobility.initialZ = 0m #eNB height


# Enable dynamic association of UEs (based on best SINR)
*.car[*].lteNic.phy.dynamicCellAssociation = true

**.car[*].masterId = 1     # useless if dynamic association is disabled
**.car[*].macCellId = 1    # useless if dynamic association is disabled
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1
**.eNodeB2.macCellId = 2
**.eNodeB2.macNodeId = 2 
**.eNodeB3.macCellId = 3
**.eNodeB3.macNodeId = 3
**.eNodeB4.macCellId = 4
**.eNodeB4.macNodeId = 4 
**.eNodeB5.macCellId = 5
**.eNodeB5.macNodeId = 5
**.eNodeB6.macCellId = 6
**.eNodeB6.macNodeId = 6 
**.eNodeBCount = 6

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.numUe = ${numUEs=10}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 25
**.fbDelay = 1

# Enable handover
*.car[*].lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.broadcastMessageInterval = 0.5s

# X2 and SCTP configuration
#*.eNodeB*.numX2Apps = 2   # one x2App per peering eNodeB
*.eNodeB1.numX2Apps = 1
*.eNodeB2.numX2Apps = 2
*.eNodeB3.numX2Apps = 2
*.eNodeB4.numX2Apps = 2
*.eNodeB5.numX2Apps = 2
*.eNodeB6.numX2Apps = 1

*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 

*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"
*.eNodeB2.x2App[1].client.connectAddress = "eNodeB3%x2ppp0"

*.eNodeB3.x2App[0].client.connectAddress = "eNodeB2%x2ppp0"
*.eNodeB3.x2App[1].client.connectAddress = "eNodeB4%x2ppp0"

*.eNodeB4.x2App[0].client.connectAddress = "eNodeB3%x2ppp0"
*.eNodeB4.x2App[1].client.connectAddress = "eNodeB5%x2ppp0"

*.eNodeB5.x2App[0].client.connectAddress = "eNodeB4%x2ppp0"
*.eNodeB5.x2App[1].client.connectAddress = "eNodeB6%x2ppp0"

*.eNodeB6.x2App[0].client.connectAddress = "eNodeB5%x2ppp0"

**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false


# ----------------------------------------------------------------------------- #
# Config "single-pare-TCP-app"
#
[Config single-pare-TCP]

##########################################################
#                    App Layer                           #
##########################################################

# Transmitter
*.server.numTcpApps = 1
*.server.tcpApp[0].typename = "TCPSessionApp"
*.server.tcpApp[0].connectPort = 1000
*.server.tcpApp[0].localPort = 1000
*.server.tcpApp[0].sendBytes = 1GiB
*.server.tcpApp[0].ctive = true
*.server.tcpApp[0].tOpen = uniform(0.210s,0.3s) 
*.server.tcpApp[0].tSend = uniform(0.35s,0.25s) 
*.server.tcpApp[0].connectAddress = "car[0]"
*.server.tcpApp[0].localAddress = "server[0]" 

# Receiver
*.car[0].numTcpApps = 1
*.car[0].tcpApp[0].typename = "TCPSinkApp"
*.car[0].tcpApp[0].localPort = 1000

**.tcpApp[*].tClose = -1s

# ----------------------------------------------------------------------------- #
# Config "multi-pare-TCP-app"
#
#[Config multi-pare-TCP]


# ----------------------------------------------------------------------------- #
# Config "VoIP-Uplink"
#
[Config VoIP-UL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 10
*.server.udpApp[*].typename = "VoIPReceiver"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 

*.car[*].numUdpApps = 1
*.car[*].udpApp[0].typename = "VoIPSender"
*.car[*].udpApp[0].destAddress = "server"
*.car[*].udpApp[0].destPort = 3000 + ancestorIndex(1)


# ----------------------------------------------------------------------------- #
# Config "VoIP-Downlink"
#
[Config VoIP-DL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 10
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 
*.server.udpApp[*].destAddress = "car[" + string(ancestorIndex(0)) + "]"
*.server.udpApp[*].startingTime = 0.05s


*.car[*].numUdpApps = 1
*.car[*].udpApp[0].typename = "VoIPReceiver"


# ----------------------------------------------------------------------------- #
# Config "VoIP-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#
[Config VoIP-D2D]

# Enable D2D for the eNodeB and the UEs involved in direct commulteNications
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].lteNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.lteNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB*.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

*.car[*].numUdpApps = 1
*.car[0..4].udpApp[0].typename = "VoIPSender"
*.car[0..4].udpApp[0].destAddress = "car[" + string(ancestorIndex(1)+5) + "]"

*.car[5..9].udpApp[0].typename = "VoIPReceiver"



# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, a transmitting car sends periodic alert messages to neighboring vehicles
#
[Config D2DMulticast]

### Enable D2D for the eNodeB and the UEs involved in direct communications ###
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"



**.amcMode = "D2D"

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only.
# Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=7}

### Traffic configuration: one-to-many traffic between UEs (car[0] --> car[1..9]) ###
*.car[*].numUdpApps = 1

# Transmitter
*.car[0].udpApp[*].typename = "AlertSender"
*.car[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.car[0].udpApp[*].startTime = uniform(0s,0.02s)
*.car[0].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[0].udpApp[*].destPort = 1000

# Receivers (they must belong to the above multicast group)
*.car[1..9].udpApp[*].typename = "AlertReceiver"
*.car[1..9].udpApp[*].localPort = 1000

# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"



